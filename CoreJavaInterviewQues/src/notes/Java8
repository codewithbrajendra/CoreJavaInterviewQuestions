Ques 1:- what is default and static method in java 8 and what is the difference between them. Can we create more than
one default and static methods in interface?
Ans :-
Default method :- Java 8 provides a facility to create default methods inside the interface. Methods which are defined
inside the interface and tagged with default are known as default methods. These methods are non-abstract methods.

Static method :- Like default methods interface allows adding static methods to it. We can define static methods inside
the interface using the static keyword and are used to define utility methods.

Difference :- 1.Default method can be overridden by its implementation classes if they required. Static method never be
overridden by its implementaion classes.
2.For accessing default method we need to create object of its implemented classes and for static method we can call by
interface name bcoz it static belongs to class level.

Can we create more than one default and static methods in interface : Yes


Ques 2:- Abstract class vs Java 8 interface?
Ans :- abstract class: Inside abstract class we can declare instance variables, which are required to the child class

       Interface: Inside interface every variables is always public static and final we cannot declare instance variables

       abstract class: Abstract class can talk about state of object

       Interface: Interface can never talk about state of object

       abstract class: Inside Abstract class we can declare constructors

       Interface: Inside interface we cannot declare constructors as purpose of
       constructors is to initialize instance variables. So what is the need of constructor there if we cannot have
       instance variables in interfaces.

       abstract class: Inside abstract class we can declare instance and static blocks

       Interface: Interfaces cannot have instance and static blocks.

       abstract class: Abstract class cannot refer lambda expression

       Interfaces: Interfaces with single abstract method can refer lambda expression

       abstract class: Inside abstract class we can override OBJECT CLASS methods

       Interfaces: We cannot override OBJECT CLASS methods inside interfaces.

       I will end on the note that:
       Default method concepts/static method concepts in interface came just to save implementation classes but not to
       provide meaningful useful implementation. Default methods/static methods are kind of dummy implementation,
       "if you want you can use them or you can override them (in case of default methods) in implementation class"
       Thus saving us from implementing new methods in implementation classes whenever new methods in interfaces are
       added. Therefore interfaces can never be equal to abstract classes.



Ques 3:- What is functional interface in java 8?
Ans :- An Interface that contains exactly one abstract method is known as functional interface. It can have any number of
       default, static methods but can contain only one abstract method. It can also declare methods of object class.
       Functional Interface is also known as Single Abstract Method Interfaces or SAM Interfaces. It is a new feature in
       Java, which helps to achieve functional programming approach.
       Program :- Practice/ParentFunctonalInterface, ChildFunctionalInterface

Ques 4:- What is Function Interface in java 8?
Ans :- The function interface is a funtional interface introduced in java 8. It takes as an argument(Object of type T) and
      and returns an object(Object of type R). The argument and output can be a different type.

      java.util.function.Function is a functional interface whose functional method (single abstract method) is
      R apply(T t). The Function interface represents an operation that takes single argument T and returns a result R.

      This is the internal implementation of the Function interface:

      @FunctionalInterface
      public interface Function<T, R> {
            R apply(T t);
      }
      Program :- java8/functionInterface/allprogram

Ques 5:- What is stream in java 8?
Ans :- Java provides new additional package in java 8 called java.util.stream. This package consist of classes,
     interfaces and enum to allow functional operations on the elements.

     1> Stream does not store elements. It simply conveys elements from source such as a data stucture, an array,
     or an I/O channel through a pipeline of computational operations.

     2> Stream is a functional in nature. Operation on stream doesn't modify it's source. For example filtering
     a Stream obtained from a collection produces a new stream without filtered elements, rather than removing
     elements from the source collection.

     3> The elements of a stream only visited once during the life time of a stream. Like an iterator, a new
     stream must be generated to revisit the same elements of the source.

     4> We can use stream to filter, collect, print and convert from one data structure to other etc.
     Program :- java8/stream/allprogram

Ques 6:- What is predicate in java 8?
Ans :- The predicate interface has an abstract method(test()) which represents a predicate(boolean-valued function) of
     as a result of specified argument.
     Program :- java8/predicate

Ques 7:- What is method reference in java 8?
Ans :-













